
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;
	
	server {
		listen               80 default_server;
		listen               [::]:80 default_server;

		server_name          _;
		charset              utf-8;
		root                 html;

		location / {
			root   /usr/share/nginx/html;
			index  index.html index.htm;
		}

		location /outone {
			proxy_redirect off;
			proxy_pass http://127.0.0.1:10000;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection upgrade;
			proxy_set_header Host $http_host;
			#proxy_set_header X-Real-IP $remote_addr;
			#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

        location /sub {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range; 
        proxy_redirect off;
        proxy_pass http://127.0.0.1:2053;
        }

	location /vmess {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Range $http_range;
    proxy_set_header If-Range $http_if_range;

    proxy_intercept_errors on; # Crucial for catching errors
    recursive_error_pages on;
    proxy_redirect off;

     # Try to proxy to the service.  If it fails (because the service is down),
     # serve a 200 OK response
    try_files @vmess_backend @vmess_unavailable;


    location @vmess_backend {
          proxy_pass http://127.0.0.1:2054;
    }

    location @vmess_unavailable {
          return 200 "pls wait"; # Or a custom HTML page
    }
}

		location /outtwo {
			proxy_redirect off;
			proxy_pass http://127.0.0.1:20000;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection upgrade;
			proxy_set_header Host $http_host;
			#proxy_set_header X-Real-IP $remote_addr;
			#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
	}
}
